name: Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Provision Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    outputs:
      acr_login_server: ${{ steps.get-output.outputs.acr_login_server }}
      aks_name: ${{ steps.get-output.outputs.aks_name }}
      rg_name: ${{ steps.get-output.outputs.rg_name }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      # Login to Azure so Terraform can use CLI authentication
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply (only if changes)
        if: ${{ steps.plan.outcome == 'success' }}
        run: terraform apply -auto-approve

      - name: Get Terraform Output
        id: get-output
        run: |
          set -e  # fail immediately if a command fails
          
          echo "Fetching Terraform outputs..."
          terraform output

          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          AKS_NAME=$(terraform output -raw aks_name)
          RG_NAME=$(terraform output -raw rg_name)

          if [ -z "$ACR_LOGIN_SERVER" ] || [ -z "$AKS_NAME" ] || [ -z "$RG_NAME" ]; then
            echo "ERROR: One or more Terraform outputs are empty."
            exit 1
          fi

          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
          echo "aks_name=$AKS_NAME" >> $GITHUB_OUTPUT
          echo "rg_name=$RG_NAME" >> $GITHUB_OUTPUT

          echo "âœ… Terraform outputs:"
          echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER"
          echo "AKS_NAME=$AKS_NAME"
          echo "RG_NAME=$RG_NAME"
          
  build-and-deploy:
    name: Build & Deploy App
    runs-on: ubuntu-latest
    needs: terraform
    env:
      ACR_LOGIN_SERVER: ${{ needs.terraform.outputs.acr_login_server }}
      AKS_NAME: ${{ needs.terraform.outputs.aks_name }}
      RG_NAME: ${{ needs.terraform.outputs.rg_name }}
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Build & Push
        run: |
          az acr login --name ${ACR_LOGIN_SERVER%%.*}
          IMAGE_TAG=${ACR_LOGIN_SERVER}/myapp:${GITHUB_SHA}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
      
      - name: Get AKS Credentials
        run: |
          echo "Getting AKS credentials for cluster: $AKS_NAME in resource group: $RG_NAME"
          az aks get-credentials \
            --resource-group "$RG_NAME" \
            --name "$AKS_NAME" \
            --overwrite-existing
      
      - name: Helm Upgrade/Install
        run: |
          helm upgrade --install myapp ../helm \
            --set image.repository=${ACR_LOGIN_SERVER}/myapp \
            --set image.tag=${GITHUB_SHA}